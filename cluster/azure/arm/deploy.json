{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "metadata": {
        "description": "Specifies a name for generating resource names."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for all resources."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Specifies a username for the Virtual Machine."
      }
    },
    "adminPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    },
    "numberOfMasters": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Number of master type VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "numberOfWorkers": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Number of worker type VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "numberOfWindows": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Number of Windows worker type VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "masterConfig": {
      "type": "string",
      "defaultValue": "ubuntu-master-config.yaml",
      "metadata": {
        "description": "Specifies the cloud-init config for master instance."
      }
    },
    "workerConfig": {
      "type": "string",
      "defaultValue": "ubuntu-worker-config.yaml",
      "metadata": {
        "description": "Specifies the cloud-init config for worker instance."
      }
    },
    "windowsConfig": {
      "type": "string",
      "defaultValue": "windows-worker-config.yaml",
      "metadata": {
        "description": "Specifies the cloud-init config for Windows worker instance."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/tigera-solutions/install-calico-for-windows/master/cluster/azure/config/"
    },
    "_artifactsFilePath": {
      "type": "string",
      "metadata": {
        "description": "The path referencing the artifact relative to _artifactsLocation value. If it's a path, this part must be URI encoded."
      },
      "defaultValue": "configure-win-node.ps1"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation. When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "defaultValue": ""
    },
    "windowsImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "windowsImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "windowsImageSKU": {
      "type": "string",
      "defaultValue": "2019-Datacenter-with-Containers",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "windowsAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Specifies a username for Windows Virtual Machine."
      }
    },
    "windowsAdminPassword": {
      "type": "securestring",
      "defaultValue": "[concat('P', uniqueString(resourceGroup().id), 'x', '!')]",
      "metadata": {
        "description": "Password for Windows Virtual Machine."
      }
    }
  },
  "variables": {
    "vNetName": "[concat(parameters('projectName'), '-vnet')]",
    "vNetAddressPrefixes": "10.240.0.0/16",
    "vNetSubnetName": "default",
    "vNetSubnetAddressPrefix": "10.240.0.0/24",
    "vmName": "[concat(parameters('projectName'), '-vm')]",
    "publicIPAddressName": "[concat(parameters('projectName'), '-ip')]",
    "networkInterfaceName": "[concat(parameters('projectName'), '-nic')]",
    "networkSecurityGroupName": "[concat(variables('vNetSubnetName'), '-nsg')]",
    "masterCustomData": "[base64(parameters('masterConfig'))]",
    "workerCustomData": "[base64(parameters('workerConfig'))]",
    "windowsCustomData": "[base64(parameters('windowsConfig'))]",
    "resourceUri": "[uri(parameters('_artifactsLocation'), parameters('_artifactsFilePath'))]",
    "resourceUriWithToken": "[concat(variables('resourceUri'), '?', parameters('_artifactsLocationSasToken'))]"
  },
  "resources": [
    {
      "comments": "Default Network Security Group for subnet [variables('vNetSubnetName')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 110,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "win_rdp",
            "properties": {
              "description": "Allow inbound to RDP default port 3389.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 120,
              "direction": "Inbound"
            }
          },
          {
            "name": "k8s_apiserver_rule",
            "properties": {
              "description": "Allow inbound to kube apiserver port 6443.",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 130,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('vNetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetAddressPrefixes')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnetAddressPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('publicIPAddressName'), '-master', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "masterCount",
        "count": "[parameters('numberOfMasters')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('networkInterfaceName'), '-master', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "masterCount",
        "count": "[parameters('numberOfMasters')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-master', copyindex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-master', copyindex()))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[concat(variables('vmName'), '-master', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "masterCount",
        "count": "[parameters('numberOfMasters')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-master', copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), '-master', copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "customData": "[variables('masterCustomData')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-master', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('publicIPAddressName'), '-worker', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "workerCount",
        "count": "[parameters('numberOfWorkers')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('networkInterfaceName'), '-worker', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "workerCount",
        "count": "[parameters('numberOfWorkers')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-worker', copyindex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-worker', copyindex()))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[concat(variables('vmName'), '-worker', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "workerCount",
        "count": "[parameters('numberOfWorkers')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-worker', copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), '-worker', copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "customData": "[variables('workerCustomData')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-worker', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('publicIPAddressName'), '-win', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "windowsCount",
        "count": "[parameters('numberOfWindows')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "sku": {
        "name": "Basic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('networkInterfaceName'), '-win', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "windowsCount",
        "count": "[parameters('numberOfWindows')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-win', copyindex()))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vNetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), '-win', copyindex()))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vNetName'), variables('vNetSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2018-10-01",
      "name": "[concat(variables('vmName'), '-win', copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "windowsCount",
        "count": "[parameters('numberOfWindows')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-win', copyindex()))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), '-win', copyindex())]",
          "adminUsername": "[parameters('windowsAdminUsername')]",
          "adminPassword": "[parameters('windowsAdminPassword')]",
          "customData": "[variables('windowsCustomData')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('windowsImagePublisher')]",
            "offer": "[parameters('windowsImageOffer')]",
            "sku": "[parameters('windowsImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), '-win', copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'-win', copyindex(), '/installcustomscript')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "windowsCount",
        "count": "[parameters('numberOfWindows')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), '-win', copyindex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {},
        "settings": {
          "fileUris": [
            "[if(not(equals(parameters('_artifactsLocationSasToken'), '')), variables('resourceUriWithToken'), variables('resourceUri'))]"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File \"./configure-win-node.ps1\""
        }
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "windowsAdminUsername": {
      "type": "string",
      "value": "[parameters('windowsAdminUsername')]"
    },
    "windowsAdminPassword": {
      "type": "string",
      "value": "[parameters('windowsAdminPassword')]"
    }
  }
}