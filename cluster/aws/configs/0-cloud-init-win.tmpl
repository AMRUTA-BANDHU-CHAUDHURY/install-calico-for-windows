<script>
echo "create admin user"
net user ${win_username} /add /y
net user ${win_username} ${win_password}
net localgroup administrators ${win_username} /add
rem echo "enable and configure WinRm"
rem winrm quickconfig -q
rem winrm set winrm/config @{MaxTimeoutms="1800000"}
rem winrm set winrm/config/client/auth @{Basic="true"}
rem winrm set winrm/config/service/auth @{Basic="true"}
rem winrm set winrm/config/service @{AllowUnencrypted="true"}
</script>

<powershell>
echo "enable SSH server"
# Install the OpenSSH Client
#Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0
# Install the OpenSSH Server
#Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
# install SSH capabilities
foreach ($cap in (Get-WindowsCapability -Name *ssh* -Online).Name){echo "installing capability '$cap'"; Add-WindowsCapability -Online -Name $cap;}
Set-Service -Name sshd -StartupType 'Automatic'
# add ssh auth key
echo '${ssh_pub_key}' > "$env:ProgramData\ssh\administrators_authorized_keys"
Start-Service sshd
# Confirm the Firewall rule is configured. It should be created automatically by setup.
if (-not (Get-NetFirewallRule -Name *ssh*)){New-NetFirewallRule -Name sshd -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22}

#echo "enable PSRemoting for WinRM and open port in Windows firewall"
#Enable-PSRemoting -Force -SkipNetworkProfileCheck
#Set-Item WSMan:\localhost\Client\TrustedHosts -Value "*" -Force
##Clear-Item -Path WSMan:\localhost\Client\TrustedHosts â€“Force
#netsh advfirewall firewall add rule name="WinRM port 5985" dir=in action=allow protocol=TCP localport=5985
#Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled "false"

# echo "set admin password"
#$admin = [adsi]("WinNT://./administrator, user")
#$admin.psbase.invoke("SetPassword", "${win_password}")

echo "Check and install required Windows features"
Get-WindowsFeature RemoteAccess,Routing,DirectAccess-VPN
if ((Get-WindowsFeature RemoteAccess).InstallState -notlike 'installed'){
  echo "installing feature 'RemoteAccess'"
  Install-WindowsFeature RemoteAccess
}
if ((Get-WindowsFeature Routing).InstallState -notlike 'installed'){
  echo "installing feature 'Routing'"
  Install-WindowsFeature Routing
}
if ((Get-WindowsFeature DirectAccess-VPN).InstallState -notlike 'installed'){
  echo "installing feature 'DirectAccess-VPN'"
  Install-WindowsFeature DirectAccess-VPN
}
Get-WindowsFeature RemoteAccess,Routing,DirectAccess-VPN
Set-Service -Name RemoteAccess -ComputerName . -StartupType "Automatic"
Get-Service RemoteAccess | select -Property name,status,starttype

echo "create c:\k dir to host Kubernetes files"
mkdir c:\k
echo "get Calico install script"
Invoke-WebRequest -UseBasicParsing https://docs.tigera.io/scripts/install-calico-windows.ps1 -OutFile c:\install-calico-windows.ps1

echo "Rebooting Windows instance after provisioning"
Restart-Computer -Force
</powershell>

<persist>false</persist>